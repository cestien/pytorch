# Generated 2025-06-25 from:
# /mnt/mafalda.2T/cestien/trabajo/zero-res/zrc/tutorial_notebooks/pytorch/timit/train.yaml
# yamllint disable
# ################################
# Model: CTC ASR on TIMIT with CRDNN (with LiGRU)
# Additions: TimeDomainSpecAugment
# Authors: Mirco Ravanelli & Peter Plantinga 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:speechbrain.utils.seed_everything [1986]
output_folder: results/augment_noise_CRDNN/1986
test_wer_file: results/augment_noise_CRDNN/1986/wer_test.txt
save_folder: data
train_log: results/augment_noise_CRDNN/1986/train_log.txt

# Data files
data_folder: data # e.g. /path/to/TIMIT
train_annotation: data/train.json
valid_annotation: data/dev.jsonn
test_annotation: data/test.json
skip_prep: false # Skip data preparation
uppercase: false # Must be True when the TIMIT dataset is in the upper-case version

# Data for augmentation
data_folder_noise: data/noise               # The noisy sequences for data augmentation will automatically be downloaded here.
NOISE_DATASET_URL: 
  https://www.dropbox.com/scl/fi/a09pj97s5ifan81dqhi4n/noises.zip?rlkey=j8b0n9kdjdr32o1f06t0cw5b7&dl=1
noise_annotation: data/noise.csv               #The data manifest files are created by the data preparation script

####################### Training Parameters ####################################
number_of_epochs: 50
batch_size: 8
lr: 1.0
sorting: ascending # choose between ascending, descending and random

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

####################### Model Parameters #######################################
activation: &id005 !name:torch.nn.LeakyReLU
dropout: 0.15
cnn_blocks: 2
cnn_channels: &id006 (128, 256)
cnn_kernelsize: &id007 (3, 3)
rnn_layers: 4
rnn_neurons: 512
rnn_bidirectional: true
dnn_blocks: 2
dnn_neurons: 512

# Outputs
output_neurons: 40
blank_index: 0

# Dataloader options
num_workers: 4
train_dataloader_opts:
  batch_size: 8
  num_workers: 4

valid_dataloader_opts:
  batch_size: 8
  num_workers: 4

test_dataloader_opts:
  batch_size: 8
  num_workers: 4

normalize: &id010 !new:speechbrain.processing.features.InputNormalization

  norm_type: global

############################## Augmentations ###################################

# Download and prepare the dataset of noisy sequences for augmentation
prepare_noise_data: !name:speechbrain.augment.preparation.prepare_dataset_from_URL
  URL: 
    https://www.dropbox.com/scl/fi/a09pj97s5ifan81dqhi4n/noises.zip?rlkey=j8b0n9kdjdr32o1f06t0cw5b7&dl=1
  dest_folder: data/noise
  ext: wav
  csv_file: data/noise.csv

# Add noise to input signal
add_noise: &id001 !new:speechbrain.augment.time_domain.AddNoise
  csv_file: data/noise.csv
  snr_low: 0
  snr_high: 15
  noise_sample_rate: 16000
  clean_sample_rate: 16000
  num_workers: 4

# Speed perturbation
speed_perturb: &id002 !new:speechbrain.augment.time_domain.SpeedPerturb
  orig_freq: 16000
  speeds: [95, 100, 105]

# Frequency drop: randomly drops a number of frequency bands to zero.
drop_freq: &id003 !new:speechbrain.augment.time_domain.DropFreq
  drop_freq_low: 0
  drop_freq_high: 1
  drop_freq_count_low: 1
  drop_freq_count_high: 3
  drop_freq_width: 0.05

# Time drop: randomly drops a number of temporal chunks.
drop_chunk: &id004 !new:speechbrain.augment.time_domain.DropChunk
  drop_length_low: 1000
  drop_length_high: 2000
  drop_count_low: 1
  drop_count_high: 5

# Augmenter: Combines previously defined augmentations to perform data augmentation
wav_augment: !new:speechbrain.augment.augmenter.Augmenter
  concat_original: true
  min_augmentations: 4
  max_augmentations: 4
  augment_prob: 1.0
  augmentations: [*id001, *id002, *id003, *id004]

############################## Models ##########################################

epoch_counter: &id012 !new:speechbrain.utils.epoch_loop.EpochCounter

  limit: 50

compute_features: !new:speechbrain.lobes.features.Fbank
  sample_rate: 16000
  n_fft: 400
  n_mels: 40

model: &id008 !new:speechbrain.lobes.models.CRDNN.CRDNN
  input_size: 40
  activation: *id005
  dropout: 0.15
  cnn_blocks: 2
  cnn_channels: *id006
  cnn_kernelsize: *id007
  time_pooling: true
  rnn_layers: 4
  rnn_neurons: 512
  rnn_bidirectional: true
  dnn_blocks: 2
  dnn_neurons: 512

output: &id009 !new:speechbrain.nnet.linear.Linear
  input_size: 512
  n_neurons: 40
  bias: true

log_softmax: !new:speechbrain.nnet.activations.Softmax
  apply_log: true

opt_class: !name:torch.optim.Adadelta
  rho: 0.95
  lr: 1.0
  eps: 1.e-8

lr_annealing: &id011 !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: 1.0
  improvement_threshold: 0.0025
  annealing_factor: 0.8
  patient: 0

modules:
  model: *id008
  output: *id009
  normalize: *id010
jit_module_keys: [model]

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: data
  recoverables:
    model: *id008
    output: *id009
    scheduler: *id011
    normalizer: *id010
    counter: *id012
compute_cost: !name:speechbrain.nnet.losses.ctc_loss
  blank_index: 0

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: results/augment_noise_CRDNN/1986/train_log.txt

ctc_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: 0
    reduction: batch

per_stats: !name:speechbrain.utils.metric_stats.ErrorRateStats
